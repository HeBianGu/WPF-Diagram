<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Diagram.Core"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HeBianGu.Diagram.Core;component/Part/Node.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=S.TreeNode.Default,
                                        TypeInTargetAssembly={x:Type local:TreeNode}}"
           BasedOn="{StaticResource {x:Static local:Node.DefaultKey}}"
           TargetType="{x:Type local:TreeNode}">
        <Setter Property="Margin" Value="0" />
        <!--<Setter Property="RenderTransform" Value="{DynamicResource {x:Static h:SystemKeys.TransformGroup}}" />-->
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="Height" Value="Auto" />
        <!--<Setter Property="h:Cattach.Behaviors">
            <Setter.Value>
                <h:Behaviors>
                    <local:NodeMouseDragBehavior />
                    <local:NodeSelectionBehavior />
                    <local:NodeMouseOverBehavior/>
                    <h:ContextMenuDisplayBehavior />
                </h:Behaviors>
            </Setter.Value>
        </Setter>-->

        <!--<Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu ItemContainerStyle="{DynamicResource {x:Static h:MenuItemKeys.Handy}}">
                    <MenuItem Command="{local:RemoveNodeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="删除" />
                </ContextMenu>
            </Setter.Value>
        </Setter>-->

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default2}}" />-->
                <Setter Property="Cursor" Value="SizeAll" />
            </Trigger>

            <!--<Trigger Property="IsSelected" Value="True">
                <Setter Property="Effect" Value="{DynamicResource {x:Static local:DiagramEffectKey.IsSelected}}" />
            </Trigger>

            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Effect" Value="{DynamicResource {x:Static h:EffectShadowKeys.Default4}}" />
            </Trigger>


            <Trigger Property="local:Node.IsDragEnter" Value="True">
                <Setter Property="Effect" Value="{DynamicResource {x:Static local:DiagramEffectKey.IsDragEnter}}" />
            </Trigger>

            <Trigger Property="local:Node.IsCanDrop" Value="True">
                <Setter Property="Effect" Value="{DynamicResource {x:Static local:DiagramEffectKey.IsCanDrop}}" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Static local:TreeNode.DefaultKey}}"
           TargetType="{x:Type local:TreeNode}" />

</ResourceDictionary>

