<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Extension">
    <DataTemplate DataType="{x:Type local:GeometryNodeDataBase}">
        <Grid local:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
              Background="Transparent">
            <AdornerDecorator HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                <Grid Width="{Binding Width}"
                      Height="{Binding Height}"
                      Margin="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      local:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
                      ClipToBounds="False">
                    <!--    -->
                    <!--<h:StoryService.Storys>
                    <h:StoryCollection>
                        <h:ScaleStory EndX="3.5"
                                      EndY="3.5"
                                      StartX="1"
                                      StartY="1"
                                      Duration="500" />
                    </h:StoryCollection>
                </h:StoryService.Storys>-->
                    <!--<Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{h:RemoveNodeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="删除" />
                    </ContextMenu>
                </Grid.ContextMenu>-->
                    <Path x:Name="path"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="{Binding Data}"
                          Fill="{Binding Fill}"
                          Stretch="Fill"
                          Stroke="{Binding Stroke}"
                          StrokeThickness="{Binding StrokeThickness}" />

                    <TextBox x:Name="editor"
                             Foreground="{Binding Foreground}"
                             Style="{DynamicResource {x:Static local:DiagramKeys.TextKey}}" />


                    <Button x:Name="btn_start"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=h:Diagram}, Path=DataContext.StartNodeCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=h:Node}}"
                            Visibility="Collapsed" />

                    <Button x:Name="btn_invoke"
                            Command="{Binding InvokeCommand}"
                            Visibility="Collapsed" />
                    <b:Interaction.Behaviors>
                        <local:LoadedAdornerBehavior AdornerType="{x:Type h:NoteResizeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={local:TrueToFalseConveter}}" />
                    </b:Interaction.Behaviors>
                </Grid>
            </AdornerDecorator>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="path" Property="Stroke" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Fill}"
                         Value="{x:Null}">
                <Setter TargetName="path" Property="Fill" Value="white" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <Setter TargetName="path" Property="StrokeDashArray" Value="2 2" />
                <Setter TargetName="path" Property="Stroke" Value="blue" />
                <Setter TargetName="path" Property="StrokeThickness" Value="2" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard RepeatBehavior="Forever"
                                    Storyboard.TargetName="path"
                                    Storyboard.TargetProperty="StrokeDashOffset">
                            <DoubleAnimation From="0"
                                             To="100"
                                             Duration="00:00:05" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <!--<Setter TargetName="path" Property="StrokeThickness" Value="3" />-->
                <Setter TargetName="path" Property="Stroke" Value="Green" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <!--<Setter TargetName="path" Property="StrokeThickness" Value="3" />-->
                <Setter TargetName="path" Property="Stroke" Value="Red" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Wait">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UseStart}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="btn_start" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UseInvoke}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="btn_invoke" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="path" Property="Fill" Value="LightGray" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}"
                         Value="True">
                <Setter TargetName="path" Property="Fill" Value="Gray" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>