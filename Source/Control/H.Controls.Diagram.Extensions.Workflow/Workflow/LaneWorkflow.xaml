<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:H.Controls.Diagram.Extensions.Workflow">

    <Style x:Key="S.Button.AddLaneNode"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType=h:Node}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}">
                        <TextBlock x:Name="txt"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="Black" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:VerticalLaneNodeData}">
        <Grid x:Name="grid"
              Background="Transparent">
            <AdornerDecorator HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                <Grid Width="{Binding Width}"
                      Height="{Binding Height}"
                      Margin="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      h:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
                      ClipToBounds="False">

                    <Border x:Name="border"
                            Background="{Binding Fill}"
                            BorderBrush="{Binding Stroke}"
                            BorderThickness="{Binding StrokeThickness}">
                        <DockPanel>
                            <Border Height="{Binding HeaderHeight}"
                                    Background="{Binding HeaderBrush}"
                                    BorderBrush="{Binding Stroke}"
                                    BorderThickness="0,0,0,1"
                                    DockPanel.Dock="Top">
                                <TextBox x:Name="editor"
                                         Foreground="{Binding Foreground}"
                                         Style="{DynamicResource {x:Static h:DiagramKeys.TextKey}}" />
                            </Border>

                            <Border />
                        </DockPanel>
                    </Border>
                    <local:WorkflowNodeAdorner.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid Margin="-35,-35,-20,-20"
                                  Background="{x:Null}"
                                  Visibility="{Binding RelativeSource={RelativeSource AncestorType=h:Node}, Path=IsMouseOver, Converter={h:BoolToVisibleConveter}}">

                                <Button Margin="0,5,0,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Command="{local:AddWorkflowNodeCommand Dock=Right,
                                                                               OffSet=-10,
                                                                               IsCreateLink=False}"
                                        Style="{StaticResource S.Button.AddLaneNode}" />

                                <Button Margin="0,5,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Command="{local:AddWorkflowNodeCommand Dock=Left,
                                                                               OffSet=-10,
                                                                               IsCreateLink=False}"
                                        Style="{StaticResource S.Button.AddLaneNode}" />
                            </Grid>
                        </ControlTemplate>
                    </local:WorkflowNodeAdorner.Template>

                    <b:Interaction.Behaviors>
                        <h:LoadedAdornerBehavior AdornerType="{x:Type local:WorkflowNodeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={h:TrueToFalseConveter}}" />
                        <h:LoadedAdornerBehavior AdornerType="{x:Type h:NoteResizeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={h:TrueToFalseConveter}}" />
                    </b:Interaction.Behaviors>
                </Grid>
            </AdornerDecorator>
        </Grid>
        <DataTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Fill}" Value="{x:Null}">
                <Setter TargetName="border" Property="Background" Value="Transparent" />
            </DataTrigger>-->
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:HorizontalLaneNodeData}">
        <Grid x:Name="grid"
              Background="Transparent">
            <AdornerDecorator HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                <Grid Width="{Binding Width}"
                      Height="{Binding Height}"
                      Margin="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      h:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
                      ClipToBounds="False">

                    <Border x:Name="border"
                            Background="{Binding Fill}"
                            BorderBrush="{Binding Stroke}"
                            BorderThickness="{Binding StrokeThickness}"
                            CornerRadius="{Binding CornerRadius}">
                        <DockPanel>
                            <Border Width="{Binding HeaderHeight}"
                                    Background="{Binding HeaderBrush}"
                                    BorderBrush="{Binding Stroke}"
                                    BorderThickness="0,0,1,0"
                                    DockPanel.Dock="Left">
                                <TextBox x:Name="editor"
                                         Foreground="{Binding Foreground}"
                                         Style="{DynamicResource {x:Static h:DiagramKeys.TextKey}}" />
                            </Border>
                            <Border />
                        </DockPanel>
                    </Border>
                    <local:WorkflowNodeAdorner.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid Margin="-35,-35,-20,-20"
                                  Background="{x:Null}"
                                  Visibility="{Binding RelativeSource={RelativeSource AncestorType=h:Node}, Path=IsMouseOver, Converter={h:BoolToVisibleConveter}}">
                                <Button Margin="5,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Command="{local:AddWorkflowNodeCommand Dock=Top,
                                                                               OffSet=-10,
                                                                               IsCreateLink=False}"
                                        Style="{StaticResource S.Button.AddLaneNode}" />

                                <Button Margin="5,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        Command="{local:AddWorkflowNodeCommand Dock=Bottom,
                                                                               OffSet=-10,
                                                                               IsCreateLink=False}"
                                        Style="{StaticResource S.Button.AddLaneNode}" />

                            </Grid>
                        </ControlTemplate>
                    </local:WorkflowNodeAdorner.Template>

                    <b:Interaction.Behaviors>
                        <h:LoadedAdornerBehavior AdornerType="{x:Type local:WorkflowNodeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={h:TrueToFalseConveter}}" />
                        <h:LoadedAdornerBehavior AdornerType="{x:Type h:NoteResizeAdorner}"
                                                 IsUse="{Binding IsTemplate, Converter={h:TrueToFalseConveter}}" />
                    </b:Interaction.Behaviors>
                </Grid>
            </AdornerDecorator>
        </Grid>

        <DataTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Fill}" Value="{x:Null}">
                <Setter TargetName="border" Property="Background" Value="Transparent" />
            </DataTrigger>-->
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="border" Property="BorderBrush" Value="Black" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>