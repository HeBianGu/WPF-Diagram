<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="https://github.com/HeBianGu"
                    xmlns:local="clr-namespace:HeBianGu.Diagram.Presenter">
    <DataTemplate DataType="{x:Type local:CheckCardNodeData}">
        <Grid local:DragAdornerBehavior.IsUse="{Binding IsTemplate}"
              Background="Transparent">
            <Grid Width="{Binding Width}"
                  Height="{Binding Height}"
                  Margin="5"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  ClipToBounds="False">
                <!--<Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{h:RemoveNodeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="删除" />
                    </ContextMenu>
                </Grid.ContextMenu>-->

                <Grid>
                    <Border x:Name="bd"
                            Background="{Binding Fill}"
                            BorderBrush="{Binding Stroke}"
                            BorderThickness="{Binding StrokeThickness}"
                            CornerRadius="2">
                        <TextBox x:Name="editor"
                                 Foreground="{Binding Foreground}"
                                 Style="{DynamicResource {x:Static local:DiagramKeys.TextKey}}" />
                    </Border>

                    <TextBlock x:Name="path"
                               Margin="5,2"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Bottom"
                               FontSize="25"
                               Foreground="{Binding Stroke}"
                               Text="√" />
                </Grid>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Foreground}"
                         Value="{x:Null}">
                <Setter TargetName="editor" Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Stroke}"
                         Value="{x:Null}">
                <Setter TargetName="bd" Property="BorderBrush" Value="Black" />
                <Setter TargetName="path" Property="Foreground" Value="Black" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Fill}"
                         Value="{x:Null}">
                <Setter TargetName="bd" Property="Background" Value="white" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}"
                         Value="Running">
                <Setter TargetName="path" Property="Foreground" Value="blue" />
                <Setter TargetName="bd" Property="BorderBrush" Value="blue" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="start">
                        <Storyboard AutoReverse="True"
                                    RepeatBehavior="Forever"
                                    Storyboard.TargetName="path"
                                    Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation From="0.2"
                                             To="1"
                                             Duration="00:00:00.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="start" />
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Success">
                <Setter TargetName="path" Property="Foreground" Value="Green" />
                <Setter TargetName="bd" Property="BorderBrush" Value="Green" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Error">
                <Setter TargetName="bd" Property="BorderBrush" Value="Red" />
                <Setter TargetName="path" Property="Foreground" Value="Red" />
            </DataTrigger>

            <DataTrigger Binding="{Binding State}"
                         Value="Wait">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="bd" Property="Background" Value="LightGray" />
            </Trigger>
            <DataTrigger Binding="{Binding IsSelected}"
                         Value="True">
                <Setter TargetName="bd" Property="Background" Value="Gray" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>